/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Result1.java
 *
 * Created on Jul 25, 2012, 8:15:39 PM
 */

package studentmanagement1;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import java.sql.Statement;
import java.util.Locale;
import javax.swing.JFrame;

/**
 *
 * @author laptop
 */
public class Result1 extends javax.swing.JFrame {

    /** Creates new form Result1 */
    public Result1() {
        super("--RESULT--");
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(studentmanagement1.StudentManagement1App.class).getContext().getResourceMap(Result1.class);
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jButton1.setFont(resourceMap.getFont("jButton1.font")); // NOI18N
        jButton1.setForeground(resourceMap.getColor("jButton1.foreground")); // NOI18N
        jButton1.setIcon(resourceMap.getIcon("jButton1.icon")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPasswordField1.setText(resourceMap.getString("jPasswordField1.text")); // NOI18N
        jPasswordField1.setName("jPasswordField1"); // NOI18N

        jButton2.setFont(resourceMap.getFont("jButton1.font")); // NOI18N
        jButton2.setForeground(resourceMap.getColor("jButton1.foreground")); // NOI18N
        jButton2.setIcon(resourceMap.getIcon("jButton2.icon")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setFont(resourceMap.getFont("jLabel5.font")); // NOI18N
        jLabel5.setForeground(resourceMap.getColor("jLabel5.foreground")); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel4.setIcon(resourceMap.getIcon("jLabel4.icon")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addContainerGap(123, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(115, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(88, 88, 88))
            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                        .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)))
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    Connection con;
    public static String s1;
    //public static int p;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                 if(evt.getSource()==jButton1) {
        //enr=Integer.parseInt(jTextField2.getText());
                                 try
    {
        Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
        con= DriverManager.getConnection("jdbc:odbc:College Management");
                try
                {
            //int enr=Integer.parseInt(jTextField2.getText());
                Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("SELECT CurrSem FROM stdlog WHERE Name1='" + StudentLogin.name+ "' and EnrollNo=" + StudentLogin.enroll+"and pass='" + jPasswordField1.getText()+ "'"); 
            // ResultSet rs=st.executeQuery("SELECT * FROM stdlog WHERE Name1='" + jTextField1.getText()+ "' and Enrollno=" + enr+" and pass='" + jPasswordField1.getText()+ "'");
           // System.out.println(enroll);
            if(rs.next())
               {

                s1=rs.getString("CurrSem");

                   //con.close();
                   //this.setVisible(false);

               }
               else
               {
                JOptionPane.showMessageDialog(null,"Invalid username or enrollment number and password","Invalid",JOptionPane.ERROR_MESSAGE);
 }

        }
        catch(Exception ex)
                {
           JOptionPane.showMessageDialog(null,"Invalid username or enrollment number and password","Invalid",JOptionPane.ERROR_MESSAGE);
            jPasswordField1.setText("");
           //jTextField2.setText("");
           //jPasswordField1.setText("");
            System.out.println(ex.getMessage());

            } // Inner try catch closed

    }
        catch(Exception x)
        {
              System.out.println(x.getMessage());
           JOptionPane.showMessageDialog(null,"Unable to connect to database","Connection error", JOptionPane.ERROR_MESSAGE);
        }



                             if(s1.equals("1")){


            ResultSet rs;
            
            Statement st;
            try {
                Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                con = DriverManager.getConnection("jdbc:odbc:College Management");
            } catch(Exception e)

            {
                System.out.println(e.getMessage());
            }
            try {
                //System.out.println(jTextField2.getText());
                st = con.createStatement();

                rs = st.executeQuery("SELECT * from Result1 WHERE ID= "+StudentLogin.enroll);
                //rs = st.executeQuery("SELECT address from stdlog WHERE Enrollno=" + jTextField2.getText());

                if (rs.next()) {
                    Marksheet1 ob=new Marksheet1();
                    ob.setVisible(true);
                    this.dispose();
                    //int rno=Integer.parseInt(jTextField2.getText());
                   //int j1 rs.getInt("PhysL");
                    ob.jLabel1.setText(rs.getString(2));
                    ob.jLabel2.setText(rs.getString(3));
                    ob.jLabel3.setText(rs.getString(4));
                    ob.jLabel4.setText(rs.getString(5));
                    ob.jLabel5.setText(rs.getString(6));
                    ob.jLabel6.setText(rs.getString(7));
                    ob.jLabel7.setText(rs.getString(8));
                    ob.jLabel8.setText(rs.getString(9));
                    ob.jLabel9.setText(rs.getString(10));
                    ob.jLabel10.setText(rs.getString(11));
                    ob.name.setText(StudentLogin.name.toUpperCase());

                    
                     ob.jLabel24.setText(rs.getString(12));

                    //p=(rs.getInt(2)+rs.getInt(3)+rs.getInt(4)+rs.getInt(5)+rs.getInt(6)+rs.getInt(7)+rs.getInt(8)+rs.getInt(9)+rs.getInt(10));
                    //ob.a1.setValue(p);
                    //System.out.println(p);
                    //ob.jLabel24.setText(rs.getString(12));
                    //System.out.println(rs.getInt("ChemL"));
                    //      int ab=(Integer.parseInt(jTextField2.getText()));
                    //    jTextField1.setText("Name of Student:" + rs.getString(1));
                    //  System.out.println(rs.getString(1));
                } else {

                    JOptionPane.showMessageDialog(null,"Your Result will be Updated shortly","Not found",JOptionPane.INFORMATION_MESSAGE);
                }
                rs.close();

            } catch (Exception ex) {
                System.out.println(ex.getMessage());
                //JOptionPane.showMessageDialog(null, ex.toString());
            }


                             }
                               if(s1.equals("2")){
                             ResultSet rs;

            Statement st;
            try {
                Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                con = DriverManager.getConnection("jdbc:odbc:College Management");
            } catch(Exception e)

            {
                System.out.println(e.getMessage());
            }
            try {
                //System.out.println(jTextField2.getText());
                st = con.createStatement();

                rs = st.executeQuery("SELECT * from Result2 WHERE ID= "+StudentLogin.enroll);
                //rs = st.executeQuery("SELECT address from stdlog WHERE Enrollno=" + jTextField2.getText());

                if (rs.next()) {
                    Marksheet2 ob=new Marksheet2();
                    ob.setVisible(true);
                    this.dispose();
                    //int rno=Integer.parseInt(jTextField2.getText());
                   //int j1 rs.getInt("PhysL");
                    ob.jLabel1.setText(rs.getString(2));
                    ob.jLabel2.setText(rs.getString(3));
                    ob.jLabel3.setText(rs.getString(4));
                    ob.jLabel4.setText(rs.getString(5));
                    ob.jLabel5.setText(rs.getString(6));
                    ob.jLabel6.setText(rs.getString(7));
                    ob.jLabel7.setText(rs.getString(8));
                    ob.jLabel8.setText(rs.getString(9));
                    ob.jLabel9.setText(rs.getString(10));
                    //ob.jLabel10.setText(rs.getString(11));
                    ob.name.setText(StudentLogin.name.toUpperCase());

                    ob.jLabel24.setText(rs.getString(11));

                    //System.out.println(rs.getString("ChemL"));
                   System.out.println(rs.getInt("ChemL"));
                    //      int ab=(Integer.parseInt(jTextField2.getText()));
                    //    jTextField1.setText("Name of Student:" + rs.getString(1));
                    //  System.out.println(rs.getString(1));
                } else {

                    JOptionPane.showMessageDialog(null,"Your Result will be Updated shortly","Not found",JOptionPane.INFORMATION_MESSAGE);
                }
                rs.close();

            } catch (Exception ex) {
                System.out.println(ex.getMessage());
                //JOptionPane.showMessageDialog(null, ex.toString());
            }



                               }

                                if(s1.equals("3")){
                             ResultSet rs;

            Statement st;
            try {
                Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                con = DriverManager.getConnection("jdbc:odbc:College Management");
            } catch(Exception e)

            {
                System.out.println(e.getMessage());
            }
            try {
                //System.out.println(jTextField2.getText());
                st = con.createStatement();

                rs = st.executeQuery("SELECT * from Result3 WHERE ID= "+StudentLogin.enroll);
                //rs = st.executeQuery("SELECT address from stdlog WHERE Enrollno=" + jTextField2.getText());

                if (rs.next()) {
                    Marksheet3 ob=new Marksheet3();
                    ob.setVisible(true);
                    this.dispose();
                    //int rno=Integer.parseInt(jTextField2.getText());
                   //int j1 rs.getInt("PhysL");
                    ob.jLabel1.setText(rs.getString(2));
                    ob.jLabel2.setText(rs.getString(3));
                    ob.jLabel3.setText(rs.getString(4));
                    ob.jLabel4.setText(rs.getString(5));
                    ob.jLabel5.setText(rs.getString(6));
                    ob.jLabel6.setText(rs.getString(7));
                    ob.jLabel7.setText(rs.getString(8));
                    ob.jLabel8.setText(rs.getString(9));
                    ob.jLabel9.setText(rs.getString(10));
                    //ob.jLabel10.setText(rs.getString(11));
                    ob.name.setText(StudentLogin.name.toUpperCase());

                    ob.jLabel26.setText(rs.getString(12));
                    //System.out.println(rs.getString("ChemL"));
                   System.out.println(rs.getInt("ChemL"));
                    //      int ab=(Integer.parseInt(jTextField2.getText()));
                    //    jTextField1.setText("Name of Student:" + rs.getString(1));
                    //  System.out.println(rs.getString(1));
                } else {

                    JOptionPane.showMessageDialog(null,"Your Result will be Updated shortly","Not found",JOptionPane.INFORMATION_MESSAGE);
                }
                rs.close();

            } catch (Exception ex) {
                System.out.println(ex.getMessage());
                //JOptionPane.showMessageDialog(null, ex.toString());
            }
                                }

                                if(s1.equals("4")){
                             ResultSet rs;

            Statement st;
            try {
                Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                con = DriverManager.getConnection("jdbc:odbc:College Management");
            } catch(Exception e)

            {
                System.out.println(e.getMessage());
            }
            try {
                //System.out.println(jTextField2.getText());
                st = con.createStatement();

                rs = st.executeQuery("SELECT * from Result4 WHERE ID= "+StudentLogin.enroll);
                //rs = st.executeQuery("SELECT address from stdlog WHERE Enrollno=" + jTextField2.getText());

                if (rs.next()) {
                    Marksheet4 ob=new Marksheet4();
                    ob.setVisible(true);
                    this.dispose();
                    //int rno=Integer.parseInt(jTextField2.getText());
                   //int j1 rs.getInt("PhysL");
                    ob.jLabel1.setText(rs.getString(2));
                    ob.jLabel2.setText(rs.getString(3));
                    ob.jLabel3.setText(rs.getString(4));
                    ob.jLabel4.setText(rs.getString(5));
                    ob.jLabel5.setText(rs.getString(6));
                    ob.jLabel6.setText(rs.getString(7));
                    ob.jLabel7.setText(rs.getString(8));
                    ob.jLabel8.setText(rs.getString(9));
                    ob.jLabel9.setText(rs.getString(10));
                    //ob.jLabel10.setText(rs.getString(11));
                    ob.name.setText(StudentLogin.name.toUpperCase());
                    ob.jLabel13.setText(rs.getString(12));
                    //System.out.println(rs.getString("ChemL"));
                   System.out.println(rs.getInt("ChemL"));
                    //      int ab=(Integer.parseInt(jTextField2.getText()));
                    //    jTextField1.setText("Name of Student:" + rs.getString(1));
                    //  System.out.println(rs.getString(1));
                } else {

                    JOptionPane.showMessageDialog(null,"Your Result will be Updated shortly","Not found",JOptionPane.INFORMATION_MESSAGE);
                }
                rs.close();

            } catch (Exception ex) {
                System.out.println(ex.getMessage());
                //JOptionPane.showMessageDialog(null, ex.toString());
            }
                                }

        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                Portal1 ob=new Portal1();
                ob.setVisible(true);
                this.dispose();
                // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Result1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField jPasswordField1;
    // End of variables declaration//GEN-END:variables

}
